{
  "service": {
    "service": "mossad",
    "serviceObject": {
      "name": "mossad"
    },
    "provider": {
      "stage": "dev",
      "region": "eu-west-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "java8",
      "memorySize": 448,
      "timeout": 300,
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "ec2:CreateNetworkInterface",
            "ec2:DescribeNetworkInterfaces",
            "ec2:DeleteNetworkInterface"
          ],
          "Resource": "*"
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "WstesterLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/mossad-dev-wstester"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "mossad",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mossad-dev-wstester:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mossad-dev-wstester:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "ec2:CreateNetworkInterface",
                          "ec2:DescribeNetworkInterfaces",
                          "ec2:DeleteNetworkInterface"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "mossad",
                    "dev",
                    "eu-west-1",
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            }
          },
          "WstesterLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/mossad/dev/1513682215095-2017-12-19T11:16:55.095Z/mossad-1.0-SNAPSHOT.zip"
              },
              "FunctionName": "mossad-dev-wstester",
              "Handler": "mossad.GetHandler",
              "MemorySize": 448,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "java8",
              "Timeout": 30,
              "VpcConfig": {
                "SecurityGroupIds": [
                  {
                    "Fn::GetAtt": "ServerlessSecurityGroup.GroupId"
                  }
                ],
                "SubnetIds": [
                  {
                    "Ref": "ServerlessSubnet"
                  }
                ]
              }
            },
            "DependsOn": [
              "WstesterLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "WstesterLambdaVersionqqc4KixQ5sU3B6i7d2Q0r3m3HD1Z3vBdcGjZRedVu4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WstesterLambdaFunction"
              },
              "CodeSha256": "qqc4KixQ5sU3B6i7d2Q/0r3m3HD1Z3vBdcGjZRedVu4="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-mossad"
            }
          },
          "ApiGatewayResourceTest": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "test",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodTestGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTest"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "WstesterLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1513682215147": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodTestGet"
            ]
          },
          "WstesterLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WstesterLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ServerlessVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
              "CidrBlock": "10.0.0.0/16"
            }
          },
          "ServerlessSubnet": {
            "DependsOn": "ServerlessVPC",
            "Type": "AWS::EC2::Subnet",
            "Properties": {
              "VpcId": {
                "Ref": "ServerlessVPC"
              },
              "AvailabilityZone": "eu-west-1a",
              "CidrBlock": "10.0.0.0/24"
            }
          },
          "ServerlessSecurityGroup": {
            "DependsOn": "ServerlessVPC",
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
              "GroupDescription": "SecurityGroup for Serverless Functions",
              "VpcId": {
                "Ref": "ServerlessVPC"
              }
            }
          },
          "ServerlessStorageSecurityGroup": {
            "DependsOn": "ServerlessVPC",
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
              "GroupDescription": "Ingress for cache cluster",
              "VpcId": {
                "Ref": "ServerlessVPC"
              },
              "SecurityGroupIngress": [
                {
                  "IpProtocol": "tcp",
                  "FromPort": "6379",
                  "ToPort": "6379",
                  "SourceSecurityGroupId": {
                    "Ref": "ServerlessSecurityGroup"
                  }
                }
              ]
            }
          },
          "ServerlessElasticacheSubnetGroup": {
            "Type": "AWS::ElastiCache::SubnetGroup",
            "Properties": {
              "Description": "Cache Subnet Group",
              "SubnetIds": [
                {
                  "Ref": "ServerlessSubnet"
                }
              ]
            }
          },
          "ServerlessElasticacheCluster": {
            "DependsOn": "ServerlessStorageSecurityGroup",
            "Type": "AWS::ElastiCache::CacheCluster",
            "Properties": {
              "AutoMinorVersionUpgrade": true,
              "Engine": "redis",
              "CacheNodeType": "cache.t1.micro",
              "NumCacheNodes": 1,
              "VpcSecurityGroupIds": [
                {
                  "Fn::GetAtt": "ServerlessStorageSecurityGroup.GroupId"
                }
              ],
              "CacheSubnetGroupName": {
                "Ref": "ServerlessElasticacheSubnetGroup"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "WstesterLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WstesterLambdaVersionqqc4KixQ5sU3B6i7d2Q0r3m3HD1Z3vBdcGjZRedVu4"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.eu-west-1.amazonaws.com/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "functions": {
      "wstester": {
        "handler": "mossad.GetHandler",
        "timeout": 30,
        "vpc": {
          "securityGroupIds": [
            {
              "Fn::GetAtt": "ServerlessSecurityGroup.GroupId"
            }
          ],
          "subnetIds": [
            {
              "Ref": "ServerlessSubnet"
            }
          ]
        },
        "events": [
          {
            "http": {
              "path": "test",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "mossad-dev-wstester",
        "package": {}
      }
    },
    "resources": {
      "Resources": {
        "ServerlessVPC": {
          "Type": "AWS::EC2::VPC",
          "Properties": {
            "CidrBlock": "10.0.0.0/16"
          }
        },
        "ServerlessSubnet": {
          "DependsOn": "ServerlessVPC",
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "VpcId": {
              "Ref": "ServerlessVPC"
            },
            "AvailabilityZone": "eu-west-1a",
            "CidrBlock": "10.0.0.0/24"
          }
        },
        "ServerlessSecurityGroup": {
          "DependsOn": "ServerlessVPC",
          "Type": "AWS::EC2::SecurityGroup",
          "Properties": {
            "GroupDescription": "SecurityGroup for Serverless Functions",
            "VpcId": {
              "Ref": "ServerlessVPC"
            }
          }
        },
        "ServerlessStorageSecurityGroup": {
          "DependsOn": "ServerlessVPC",
          "Type": "AWS::EC2::SecurityGroup",
          "Properties": {
            "GroupDescription": "Ingress for cache cluster",
            "VpcId": {
              "Ref": "ServerlessVPC"
            },
            "SecurityGroupIngress": [
              {
                "IpProtocol": "tcp",
                "FromPort": "6379",
                "ToPort": "6379",
                "SourceSecurityGroupId": {
                  "Ref": "ServerlessSecurityGroup"
                }
              }
            ]
          }
        },
        "ServerlessElasticacheSubnetGroup": {
          "Type": "AWS::ElastiCache::SubnetGroup",
          "Properties": {
            "Description": "Cache Subnet Group",
            "SubnetIds": [
              {
                "Ref": "ServerlessSubnet"
              }
            ]
          }
        },
        "ServerlessElasticacheCluster": {
          "DependsOn": "ServerlessStorageSecurityGroup",
          "Type": "AWS::ElastiCache::CacheCluster",
          "Properties": {
            "AutoMinorVersionUpgrade": true,
            "Engine": "redis",
            "CacheNodeType": "cache.t1.micro",
            "NumCacheNodes": 1,
            "VpcSecurityGroupIds": [
              {
                "Fn::GetAtt": "ServerlessStorageSecurityGroup.GroupId"
              }
            ],
            "CacheSubnetGroupName": {
              "Ref": "ServerlessElasticacheSubnetGroup"
            }
          }
        }
      },
      "Outputs": {}
    }
  },
  "package": {
    "artifactDirectoryName": "serverless/mossad/dev/1513682215095-2017-12-19T11:16:55.095Z",
    "artifact": "mossad-1.0-SNAPSHOT.zip"
  }
}